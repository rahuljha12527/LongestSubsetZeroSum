import java.util.*;

/*
	- You are given an integer array containing positive and negative numbers.
	- Your task is to find out the length of the longest continuous subset of this array whose elements add upto zero.

*/

public class solution 
{
    public static int lengthOfLongestSubsetWithZeroSum(ArrayList<Integer> arr) 
   	{
		//	write your code here.
        
        if(arr.size()==1 &&arr.get(0)==0){
            return 1;
        }
        
        HashMap<Integer,Integer> map=new HashMap<>();

            int sum=0;
            int maxlength=0;
          // int counter=0;
            for(int i=0;i<arr.size();i++){
               
                sum=sum+arr.get(i);
                if(arr.get(i)==0 && maxlength==0)
            {
                maxlength=1;
            }
            if(sum==0)
            {
                maxlength=i+1;
            }
            Integer prev=map.get(sum);
            if(prev!=null)
            {
                maxlength=Math.max(maxlength, i-prev);
            }
            else
            {
                map.put(sum,i);
            }
        } 
                             
//                 if(!map.containsKey(sum)){
//                     map.put(sum,i);
//                     counter++;    
//                   //  if(ma)


//                 }
//                 else if(map.containsKey(sum)){
                    
//                     maxlength=counter-1;
                    
//                 }
                
//             }
            
		return maxlength;
	}
}
